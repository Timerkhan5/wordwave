// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace wordwave.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250618061131_AddIsExamToTask")]
    partial class AddIsExamToTask
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wordwave.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Иван Иванов",
                            Description = "Основы грамматики для начинающих",
                            Link = "https://example.com/grammar-a1",
                            Name = "Грамматика A1"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Мария Петрова",
                            Description = "Слова и выражения для уровня A2",
                            Link = "https://example.com/vocab-a2",
                            Name = "Лексика A2"
                        });
                });

            modelBuilder.Entity("wordwave.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "createdAt");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "materialId");

                    b.Property<int>("Rating")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "rating");

                    b.Property<int?>("TaskId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "taskId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "userName");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("TaskId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("wordwave.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CorrectOption")
                        .HasColumnType("integer");

                    b.Property<int>("Difficulty")
                        .HasColumnType("integer");

                    b.Property<bool>("IsExam")
                        .HasColumnType("boolean");

                    b.Property<string>("Option1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Option2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Option3")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Option4")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CorrectOption = 3,
                            Difficulty = 1,
                            IsExam = false,
                            Option1 = "Берлин",
                            Option2 = "Мадрид",
                            Option3 = "Париж",
                            Option4 = "Рим",
                            Question = "Столица Франции?"
                        },
                        new
                        {
                            Id = 2,
                            CorrectOption = 2,
                            Difficulty = 1,
                            IsExam = false,
                            Option1 = "3",
                            Option2 = "4",
                            Option3 = "5",
                            Option4 = "22",
                            Question = "2 + 2 = ?"
                        },
                        new
                        {
                            Id = 3,
                            CorrectOption = 2,
                            Difficulty = 2,
                            IsExam = false,
                            Option1 = "Золото",
                            Option2 = "Кислород",
                            Option3 = "Олово",
                            Option4 = "Серебро",
                            Question = "Какой элемент обозначается символом 'O'?"
                        });
                });

            modelBuilder.Entity("wordwave.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "adminhash",
                            RegisteredAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Role = "admin",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "studenthash",
                            RegisteredAt = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Role = "user",
                            UserName = "student"
                        });
                });

            modelBuilder.Entity("wordwave.Models.UserTaskProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<int>("TaskId")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserTaskProgresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsCompleted = true,
                            TaskId = 1,
                            UserId = "1"
                        },
                        new
                        {
                            Id = 2,
                            IsCompleted = false,
                            TaskId = 1,
                            UserId = "2"
                        },
                        new
                        {
                            Id = 3,
                            IsCompleted = true,
                            TaskId = 2,
                            UserId = "2"
                        });
                });

            modelBuilder.Entity("wordwave.Models.Review", b =>
                {
                    b.HasOne("wordwave.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.HasOne("wordwave.Models.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId");

                    b.Navigation("Material");

                    b.Navigation("Task");
                });
#pragma warning restore 612, 618
        }
    }
}
